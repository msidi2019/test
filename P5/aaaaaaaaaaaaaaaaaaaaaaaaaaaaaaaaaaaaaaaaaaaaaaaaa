function drawScene() {
        gl.clear(gl.COLOR_BUFFER_BIT);
        
        projectionValue = document.querySelector('input[name="projection"]:checked').value, 
        daylightValue = document.querySelector('input[name="daylight"]:checked').value,      
        u_pMatrix = gl.getUniformLocation(gl.program, "u_pMatrix"),
        u_vMatrix = gl.getUniformLocation(gl.program, "u_vMatrix"),
        ratio = canvas.width/canvas.height;
        
        switch (projectionValue) {
            case "perspective":
                var pMatrix = mat4.perspective(mat4.create(), toRadian(60), ratio, 0.1, 100),
                    vMatrix = mat4.lookAt(mat4.create(), [0, axisY, z], [0, 0, 0], [0, 1, 0]);
                break;
        
            case "orthographic":
                var pMatrix = mat4.ortho(mat4.create(), -ratio, ratio, -1.0, 1.50, -1.0, 1.50),
                    vMatrix = mat4.create();
                break;
            default:
        }

        gl.uniformMatrix4fv(u_pMatrix, false, pMatrix);
        gl.uniformMatrix4fv(u_vMatrix, false, vMatrix);

        switch(daylightValue){
            case "day":
                var u_Filter = gl.getUniformLocation(gl.program, "u_Filter");
                gl.uniform1f(u_Filter, 1);
                break;

            case "night":
                var u_Filter = gl.getUniformLocation(gl.program, "u_Filter");
                gl.uniform1f(u_Filter, 0);
                break;
        }

        var rotationChecked = document.querySelector('input[name="rotation"]:checked'),
            primitiveValue = document.querySelector('input[name="primitive"]:checked').value,
            mvMatrix = mat4.fromRotation(mat4.create(), count, [0, 0.5, 0]),
            u_mvMatrix = gl.getUniformLocation(gl.program, "u_mvMatrix");

        gl.uniformMatrix4fv(u_mvMatrix, false, mvMatrix);

        switch (primitiveValue) {
            case "triangles":
                primitive = gl.TRIANGLES;
                break;
            case "lines":
                primitive = gl.LINES;
                break;
            default:
        }
        
        // DRAW PRIMITIVE ELEMENTS
        gl.drawElements(primitive, 6 * 3 * 3, gl.UNSIGNED_SHORT, 0);

        var speed = document.getElementById("speed").value;

        if (rotationChecked){
            count += 0.01 * speed;
        }

        // CALL DRAWSCENE AGAIN IN THE NEXT BROWSER REPAINT
        requestAnimationFrame(drawScene);
    }
